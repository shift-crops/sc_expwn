#!/usr/bin/env python
from sc_expwn import *  # https://raw.githubusercontent.com/shift-crops/sc_expwn/master/sc_expwn.py

bin_file = './pwn'
context(os = 'linux', arch = 'amd64')
context.log_level = 'debug'

#==========

env = Environment('debug', 'local', 'remote')
env.set_item('mode',    debug = 'DEBUG', local = 'PROC', remote = 'SOCKET')
env.set_item('target',  debug   = {'argv':[bin_file], 'aslr':False}, \
                        local   = {'argv':[bin_file]}, \
                        remote  = {'host':'target', 'port':4296})
env.set_item('libc',    debug   = None, \
                        local   = None, \
                        remote  = 'libc-2.19.so_remote')
env.select('debug')

#==========

binf = ELF(bin_file)
'''
addr_plt_puts       = binf.plt['puts']
addr_got_main       = binf.got['__libc_start_main']
addr_bss            = binf.sep_section['.bss']
addr_main           = binf.sep_function['main']
'''

libc = ELF(env.libc) if env.libc else binf.libc
'''
offset_libc_main        = libc.sep_function['__libc_start_main']
offset_libc_malloc_hook = libc.symbols['__malloc_hook']
offset_libc_mainarena   = offset_libc_malloc_hook + 0x10
'''

#==========

def attack(conn, **kwargs):
    pwn = Pwn(conn)

    conn.recvuntil('> ')
    conn.sendline('hoge')

    info('addr_heap_base    = 0x{:08x}'.format(addr_heap_base))

    libc.address = addr_libc_mainarena - offset_libc_mainarena
    info('addr_libc_base    = 0x{:08x}'.format(libc.address))
    addr_libc_system    = libc.sep_function['system']
    addr_libc_str_sh    = next(libc.search('/bin/sh'))
    
class Pwn:
    def __init__(self, conn):
        self.recvuntil      = conn.recvuntil
        self.recv           = conn.recv
        self.sendline       = conn.sendline
        self.send           = conn.send
        self.sendlineafter  = conn.sendlineafter
        self.sendafter      = conn.sendafter

#==========

if __name__=='__main__':
    comn = Communicate(env.mode, **env.target)
    comn.connect()
    comn.run(attack)
    comn.connection.interactive()
    
#==========
